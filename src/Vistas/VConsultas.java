/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import vet.Acceso.*;
import vet.Entidades.*;

/**
 *
 * @author Exon
 */
public class VConsultas extends javax.swing.JInternalFrame {

    private DefaultTableModel tabla;
    private ClienteData cd;
    private MascotaData md;
    private TratamientoData td;
    private VisitaData vd;
   
    private Clientes cl;
    private Mascotas m;
    private Tratamiento t;
    private VisitaMascotas vm;
    
    private ArrayList<Clientes> acl=new ArrayList<>();
    private ArrayList<Mascotas> am=new ArrayList<>();
    private ArrayList<VisitaMascotas> avm=new ArrayList<>();
    private ArrayList<Tratamiento> atrat=new ArrayList<>();
    private ArrayList<Tratamiento> atratfija=new ArrayList<>();
    FondoPanel fondo = new FondoPanel();
    
    
    
    public VConsultas() {
        tabla=new DefaultTableModel();
        cd=new ClienteData();
        md=new MascotaData();
        td=new TratamientoData();
        vd=new VisitaData();
        this.setContentPane(fondo);
        initComponents();
        armarCabeceraCL();
        cargarCombo();
    }
 private void cargarCombo(){
   
         jComboT.removeAllItems();
     atratfija=(ArrayList) td.obtenerTratamientos();
    for(Tratamiento t:atratfija){
    jComboT.addItem(t);
    
    }
        jComboT.setSelectedIndex(-1);
       
    
    }
    
     private void armarCabeceraCL(){
     cleanFilaTabla();
    ArrayList<Object> filacabecera=new ArrayList<>();
    filacabecera.add("ID");
    filacabecera.add("DNI");
    filacabecera.add("Apellido");
    filacabecera.add("Nombre");
    filacabecera.add("Dirección");
    filacabecera.add("Teléfono");
    filacabecera.add("Contacto Alternativo");
    filacabecera.add("Teléfono Alt");
    
    
    for(Object it:filacabecera){
    tabla.addColumn(it);
    
    
    }
    jTabla.setModel(tabla);
    
   
   
   }
    
      private void armarCabeceraMA(){
   cleanFilaTabla();
    ArrayList<Object> filacabecera=new ArrayList<>();
    filacabecera.add("ID");
    filacabecera.add("Alias");
    filacabecera.add("Sexo");
    filacabecera.add("Especie");
    filacabecera.add("Raza");
    filacabecera.add("Pelaje");
    filacabecera.add("Fecha de Nacimiento");
    filacabecera.add("CLiente");
    
    
    for(Object it:filacabecera){
    tabla.addColumn(it);
    
    
    }
    jTabla.setModel(tabla);
    
   
   
   }
      
      
       private void armarCabeceraVI(){
   cleanFilaTabla();
    ArrayList<Object> filacabecera=new ArrayList<>();
    filacabecera.add("ID");
    filacabecera.add("Mascota");
    filacabecera.add("Fecha de visita");
    filacabecera.add("Peso");
    filacabecera.add("Descripción");
    filacabecera.add("Tratamiento");
    filacabecera.add("Enfermedad");
    
    
    
    for(Object it:filacabecera){
    tabla.addColumn(it);
    
    
    }
    jTabla.setModel(tabla);
    
   
   
   }
    
       private void cleanFilaTabla(){
      tabla.setColumnCount(0);
      int indice=tabla.getRowCount()-1;
      
      for (int i=indice;i>=0;i--){
      
      tabla.removeRow(i);
      }
        
    }
        private void armarCabeceraTRA(){
        cleanFilaTabla();
    ArrayList<Object> filacabecera=new ArrayList<>();
    filacabecera.add("ID");
    filacabecera.add("Tipo de tratamiento");
    filacabecera.add("Descripción");
    filacabecera.add("Importe");
   
    
    
    for(Object it:filacabecera){
    tabla.addColumn(it);
    
    
    }
    jTabla.setModel(tabla);
    
   
   
   }
    
        
       

        
        
        
        
        
        
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable();
        jBsalir = new javax.swing.JButton();
        jBclientes = new javax.swing.JButton();
        jBmascotas = new javax.swing.JButton();
        jBtrat = new javax.swing.JButton();
        jBvisitas = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextIDCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextIDM = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboT = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(0, 115, 133));

        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTabla);

        jBsalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistas/Botones y vistas JAVA/BnSalir.png"))); // NOI18N
        jBsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsalirActionPerformed(evt);
            }
        });

        jBclientes.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jBclientes.setText("Clientes");
        jBclientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBclientesActionPerformed(evt);
            }
        });

        jBmascotas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jBmascotas.setText("Mascotas");
        jBmascotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBmascotasActionPerformed(evt);
            }
        });

        jBtrat.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jBtrat.setText("Tratamientos");
        jBtrat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtratActionPerformed(evt);
            }
        });

        jBvisitas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jBvisitas.setText("Visitas");
        jBvisitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBvisitasActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistas/Botones y vistas JAVA/BannerVetConsul.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Ingrese id de cliente:");

        jTextIDCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextIDClienteKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Ingrese id de Mascota:");

        jTextIDM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextIDMKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Seleccione tipo de tratamiento:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jLabel1)
                .addContainerGap(111, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBclientes)
                        .addGap(33, 33, 33)
                        .addComponent(jBmascotas)
                        .addGap(31, 31, 31)
                        .addComponent(jBvisitas)
                        .addGap(34, 34, 34)
                        .addComponent(jBtrat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBsalir))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextIDCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(jLabel3))
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboT, 0, 139, Short.MAX_VALUE)
                            .addComponent(jTextIDM))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextIDCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextIDM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBsalir)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBmascotas)
                        .addComponent(jBclientes)
                        .addComponent(jBvisitas)
                        .addComponent(jBtrat)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsalirActionPerformed
this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jBsalirActionPerformed

    private void jBclientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBclientesActionPerformed
        cleanFilaTabla();
        armarCabeceraCL();
       
        try{ 
        int id=Integer.parseInt(jTextIDCliente.getText());
        cl=new Clientes();
       
        
        
            cl=cd.buscarCliente(id);
        tabla.addRow(new Object[] {cl.getIdCliente(),cl.getDni(),cl.getApellido(),cl.getNombre(),cl.getDire(),cl.getTel(),cl.getNombreAlt(),cl.getTelAlt()});
            
        }catch(NumberFormatException n){
         acl=(ArrayList) cd.listarClientes();
        
         for(Clientes c: acl){
           tabla.addRow(new Object [] {c.getIdCliente(), c.getDni(), c.getApellido(),c.getNombre(),c.getDire(),c.getTel(),c.getNombreAlt(),c.getTelAlt()});
       }
       }catch(NullPointerException nu){
         acl=(ArrayList) cd.listarClientes();
        
         for(Clientes c: acl){
           tabla.addRow(new Object [] {c.getIdCliente(), c.getDni(), c.getApellido(),c.getNombre(),c.getDire(),c.getTel(),c.getNombreAlt(),c.getTelAlt()});
       }
    
       } 
        
    }//GEN-LAST:event_jBclientesActionPerformed

    private void jBmascotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBmascotasActionPerformed
       cleanFilaTabla();
        armarCabeceraMA();
        
         try{ 
        int id=Integer.parseInt(jTextIDCliente.getText());
         
        
               
        am=(ArrayList) md.listarMascotasPorCliente(id);
             System.out.println(am);
             boolean b = am.isEmpty();  // comprobar que el objeto este vacio
        if(b==false){
         for(Mascotas mas: am){
            tabla.addRow(new Object [] {mas.getIdMascota(), mas.getAlias(), mas.getSexo(),mas.getEspecie(),mas.getRaza(),mas.getPelaje(),mas.getFechaNac(),mas.getIdCliente()});
        }
        }else{  am=(ArrayList) md.listarMascotas();
         for(Mascotas mas: am){
            tabla.addRow(new Object [] {mas.getIdMascota(), mas.getAlias(), mas.getSexo(),mas.getEspecie(),mas.getRaza(),mas.getPelaje(),mas.getFechaNac(),mas.getIdCliente()});
        }}
         }catch(NullPointerException | NumberFormatException nu){
          am=(ArrayList) md.listarMascotas();
         for(Mascotas mas: am){
            tabla.addRow(new Object [] {mas.getIdMascota(), mas.getAlias(), mas.getSexo(),mas.getEspecie(),mas.getRaza(),mas.getPelaje(),mas.getFechaNac(),mas.getIdCliente()});
        }
         
         }
    }//GEN-LAST:event_jBmascotasActionPerformed

    private void jBvisitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBvisitasActionPerformed
         cleanFilaTabla();
        armarCabeceraVI();
    
        
         try{ 
             t=new Tratamiento();
             t=(Tratamiento) jComboT.getSelectedItem();
             int id=Integer.parseInt(jTextIDM.getText());
             
         
         avm=(ArrayList) vd.listarVisitasPorMascotas(id,t.getIdTrat());
         boolean b=avm.isEmpty();
           
             
         if(b==false){
             
          for(VisitaMascotas visit: avm){
            tabla.addRow(new Object [] {visit.getIdVisita(),visit.getIdMascota(),visit.getFechaVisit(),visit.getPeso(),visit.getDescripcion(),visit.getIdtrat(),visit.isEnfermedad()});
        }
         }else{
          avm=(ArrayList) vd.listarVisitas();
          for(VisitaMascotas visit: avm){
            tabla.addRow(new Object [] {visit.getIdVisita(),visit.getIdMascota(),visit.getFechaVisit(),visit.getPeso(),visit.getDescripcion(),visit.getIdtrat(),visit.isEnfermedad()});
        }
         }
           }catch(NullPointerException | NumberFormatException nu){
                  avm=(ArrayList) vd.listarVisitas();
          for(VisitaMascotas visit: avm){
            tabla.addRow(new Object [] {visit.getIdVisita(),visit.getIdMascota(),visit.getFechaVisit(),visit.getPeso(),visit.getDescripcion(),visit.getIdtrat(),visit.isEnfermedad()});
        }
                 }
        
               
         
        
        
        
        
        
       
    }//GEN-LAST:event_jBvisitasActionPerformed

    private void jBtratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtratActionPerformed
        cleanFilaTabla();
        armarCabeceraTRA();
        atrat=(ArrayList) td.obtenerTratamientos();
         for(Tratamiento tt: atrat){
            tabla.addRow(new Object [] {tt.getIdTrat(),tt.getTipoTrat(),tt.getDescripcion(),tt.getImporte()});
        }
        
        
    }//GEN-LAST:event_jBtratActionPerformed

    private void jTextIDClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextIDClienteKeyTyped
        // TODO add your handling code here:
        if(Character.isLetter(evt.getKeyChar())){
        evt.consume();
        }
        if(evt.getKeyChar()==KeyEvent.VK_SPACE){
        evt.consume();
    }//GEN-LAST:event_jTextIDClienteKeyTyped
    }
    private void jTextIDMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextIDMKeyTyped
        // TODO add your handling code here:
         if(Character.isLetter(evt.getKeyChar())){
        evt.consume();
        }
        if(evt.getKeyChar()==KeyEvent.VK_SPACE){
        evt.consume();
    }//GEN-LAST:event_jTextIDMKeyTyped
    }
     class FondoPanel extends JPanel{
        private Image Imagen;
      
        @Override
        public void paint (Graphics g){
            Image imagen = new ImageIcon(getClass().getResource("/imagen/Fondo1.png")).getImage();
            
             g.drawImage(imagen,0,0,getWidth(),getHeight(),this);
            setOpaque(false);
            super.paint(g);
        }
    }  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBclientes;
    private javax.swing.JButton jBmascotas;
    private javax.swing.JButton jBsalir;
    private javax.swing.JButton jBtrat;
    private javax.swing.JButton jBvisitas;
    private javax.swing.JComboBox<Tratamiento> jComboT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabla;
    private javax.swing.JTextField jTextIDCliente;
    private javax.swing.JTextField jTextIDM;
    // End of variables declaration//GEN-END:variables
}
